<?php
/**
 * Created by PhpStorm.
 * User: Abnet
 * Date: 2/28/2021
 * Time: 12:00 PM
 */

namespace Absoft\Line\Engines\HTTP;

use Absoft\App\Files\Loader;
use Absoft\App\Files\Resource;
use Absoft\App\Pager\Alert;
use Absoft\Line\FaultHandling\Exceptions\FileNotFound;
use Absoft\Line\FaultHandling\FaultHandler;
use Absoft\Line\HTTP\Request;
use Absoft\Line\HTTP\Route;

class ViewerEngine
{

    /**
     * @var Request
     * this field will hold the request given to this object
     * it will be constructed
     */
    private $request;
    private $GO_TO_ADDRESS = "";
    private $_main_address;

    function __construct(Request $request, $_main_folder){

        $this->request = $request;
        $this->request->request = json_decode(json_encode($this->request->request));
        $this->_main_address = $_main_folder;

    }

    /**
     * this method will construct the address
     * by using the field request
     */
    private function constructAddress(){

        $page = strtolower($this->request->header->page_name);
        $sub_page = strtolower($this->request->header->sub_page);

        if($page == "system"){
            $this->GO_TO_ADDRESS = $this->_main_address."/System/Absoft/App/Templates/".$sub_page."/index.php";
        }
        else{
            $this->GO_TO_ADDRESS = $this->_main_address."/apps/Templates/$page/$sub_page/index.php";
        }

    }

    /**
     * this method will render the view
     * by using the address generated by constructAddress() method
     * @throws FileNotFound
     */
    private function show(){

        if(FaultHandler::checkError()){
            include_once $this->_main_address."/System/Absoft/App/Templates/error/index.php";

        }

        if(file_exists($this->GO_TO_ADDRESS)){
            include_once ($this->GO_TO_ADDRESS);
        }else{
            throw new FileNotFound($this->GO_TO_ADDRESS, __FILE__, __LINE__);
        }

        FaultHandler::showError();

    }


    public function start(){

        try {

            $this->constructAddress();
            $this->show();
            //print "good start";

        } catch (FileNotFound $e) {
            $e->report();
        }

    }

    public function route_address($name, $request_array = []){

        return Route::routeAddress($name, $request_array);

    }

    public function view_address($page_name, $sub_page, $request_array=[]){

        return Route::viewAddress($page_name, $sub_page, $request_array);

    }

    /*public function view($page_name, $sub_page, $request_array=[]){

        Route::view($page_name, $sub_page, $request_array);

    }

    public function route($name, $request_array=[]){

        Route::goRoute($name, $request_array);

    }*/

    public function loadTemplate($template_name){

        include_once "./apps/Templates/$template_name";

    }

    public function load_css($style_name){

        return Loader::cssAddress($style_name);

    }

    public function load_js($js_name){

        return Loader::jsAddress($js_name);

    }

    public function load_img($img_name){

        return Resource::imageAddress($img_name);

    }

    public function load_doc($doc_address){

        return Resource::loadDocuments($doc_address);

    }

    public function show_alert(){

        Alert::displayAlert();

    }

    public function set_alert_classname($success="", $info="", $error=""){

        Alert::setErrorClassName($error);
        Alert::setSuccessClassName($success);
        Alert::setInfoClassName($info);

    }

}
